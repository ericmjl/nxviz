name: Pull request checks

on: [pull_request]

env:
  cache-version: "cache-v1"

jobs:
  build-environment:
    strategy:
      max-parallel: 10
      matrix:
        config:
          - { python-version: "3.10", os: ubuntu-latest }
          - { python-version: "3.11", os: ubuntu-latest }
          - { python-version: "3.12", os: ubuntu-latest }
          - { python-version: "3.10", os: macos-latest }
          - { python-version: "3.11", os: macos-latest }
          - { python-version: "3.12", os: macos-latest }
    runs-on: ubuntu-latest
    name: Build conda environment
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      # See: https://github.com/mamba-org/setup-micromamba
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          cache-environment: true
          cache-downloads: true
          cache-environment-key: environment-${{ env.cache-version }}-${{ matrix.config.os }}
          cache-downloads-key: downloads-${{ env.cache-version }}-${{ matrix.config.os }}
          post-cleanup: "all"
          condarc: |
            channels:
              - conda-forge
          create-args: >-
            python=${{ matrix.config.python-version }}
            conda-pack

      - name: Build environment
        run: |
          python -m pip install .

      - name: Run conda-pack
        run: conda pack -n nxviz -o nxviz.tar.gz

      # See: https://github.com/actions/upload-artifact
      - name: Upload environment
        uses: actions/upload-artifact@v4
        with:
          name: nxviz-tarball
          path: nxviz.tar.gz

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build-environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/actions/download-artifact
      - name: Download environment tarball
        uses: actions/download-artifact@v4
        with:
          name: nxviz-tarball

      - name: Unpack environment and activate it
        run: |
          bash scripts/ci/unpack_environment.sh

      - name: Run tests
        run: |
          source /tmp/nxviz/bin/activate
          python -m pip install -e .

  docs:
    name: Build static site docs
    runs-on: ubuntu-latest
    needs: build-environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/actions/download-artifact
      - name: Download environment tarball
        uses: actions/download-artifact@v4
        with:
          name: nxviz-tarball

      - name: Unpack environment and activate it
        run: |
          bash scripts/ci/unpack_environment.sh

      - name: Build docs
        run: |
          source /tmp/nxviz/bin/activate
          python -m ipykernel install --user --name nxviz
          make docs

      # https://www.bradmcgonigle.com/blog/github-action-for-continuous-deployment
      # - NETLIFY_SITE_ID maps to the netlify site's API ID
      # - NETLIFY_AUTH_TOKEN maps to netlify's Personal Access Token that I set on a per-user basis
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --dir=site/
